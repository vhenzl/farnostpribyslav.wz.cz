import { notFound } from 'next/navigation';
import type { JSX } from 'react';
import { fotoPath, getAllZpravy, parseFotkyPopisek } from '../../../lib/content';

export async function generateStaticParams() {
  const rows = await getAllZpravy();
  return rows.map(z => ({ slug: `${z.rok}-${z.idr}` }));
}

export const metadata = { title: 'Zprávy – detail' };

type PageProps = { params: Promise<{ slug: string }> };

export default async function ZpravaDetail({ params }: PageProps): Promise<JSX.Element> {
  const { slug } = await params;
  const [rokStr, idrStr] = slug.split('-');
  const rok = Number(rokStr);
  const idr = Number(idrStr);
  const rows = await getAllZpravy();
  const z = rows.find(r => r.rok === rok && r.idr === idr);
  if (!z) return notFound();
  const captions = parseFotkyPopisek(z.foto_popisek);
  return (
    <article>
      <h1>{z.nazev}</h1>
      <p><em>{z.autor}</em></p>
      <div dangerouslySetInnerHTML={{ __html: z.text.replace(/<!--\s*Generated by XStandard[\s\S]*?-->/, '') }} />
      {Array.from({ length: z.foto_pocet }).map((_, i) => {
        const idx = i + 1;
        const src = fotoPath(z.rok, z.foto_nazev, idx);
        const alt = captions[i] ?? '';
        return (
          <figure key={idx}>
            <img src={src} alt={alt} />
            {alt ? <figcaption>{alt}</figcaption> : null}
          </figure>
        );
      })}
    </article>
  );
}
