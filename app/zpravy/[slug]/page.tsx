import { notFound } from 'next/navigation';
import type { JSX } from 'react';
import { fotoPath, getAllZpravy, getPublishersMap, parseFotkyPopisek } from '../../../lib/content';

export async function generateStaticParams() {
  const rows = await getAllZpravy();
  return rows.map(z => ({ slug: `${z.rok}-${z.idr}` }));
}

export const metadata = { title: 'Zprávy – detail' };

type PageProps = { params: Promise<{ slug: string }> };

export default async function ZpravaDetail({ params }: PageProps): Promise<JSX.Element> {
  const { slug } = await params;
  const [rokStr, idrStr] = slug.split('-');
  const rok = Number(rokStr);
  const idr = Number(idrStr);
  const rows = await getAllZpravy();
  const z = rows.find(r => r.rok === rok && r.idr === idr);
  if (!z) return notFound();
  const captions = parseFotkyPopisek(z.foto_popisek);
  const pubMap = await getPublishersMap();
  const pub = pubMap.get(z.vlozil);
  // Prev/next across years
  const sorted = [...rows].sort((a, b) => (a.rok === b.rok ? a.idr - b.idr : a.rok - b.rok));
  const idx = sorted.findIndex(r => r.rok === z.rok && r.idr === z.idr);
  const prev = idx > 0 ? sorted[idx - 1] : undefined;
  const next = idx >= 0 && idx < sorted.length - 1 ? sorted[idx + 1] : undefined;
  return (
    <article className="prose">
      <p className="breadcrumbs">
        <a href="/zpravy">Zprávy</a>
        <span> / </span>
        <a href={`/zpravy#rok-${z.rok}`}>{z.rok}</a>
      </p>
      <h1>{z.nazev}</h1>
      <p className="byline"><em>{z.autor}</em></p>
      <div dangerouslySetInnerHTML={{ __html: z.text.replace(/<!--\s*Generated by XStandard[\s\S]*?-->/, '') }} />
      {Array.from({ length: z.foto_pocet }).map((_, i) => {
        const idx = i + 1;
        const src = fotoPath(z.rok, z.foto_nazev, idx);
        const alt = captions[i] ?? '';
        return (
          <figure key={idx}>
            <img src={src} alt={alt} />
            {alt ? <figcaption>{alt}</figcaption> : null}
          </figure>
        );
      })}
      <hr />
      <section className="article-meta">
        {pub && (
          <p>
            <strong>Publikoval: </strong>
            <a href={`mailto:${pub.email}`}>{pub.name}</a>
          </p>
        )}
        <nav className="article-nav">
          <span>
            {prev && (
              <a href={`/zpravy/${prev.rok}-${prev.idr}`}>
                <span>&larr; </span>
                <span>{prev.nazev}</span>
              </a>
            )}
          </span>
          <span>
            {next && (
              <a href={`/zpravy/${next.rok}-${next.idr}`}>
                <span>{next.nazev}</span>
                <span> &rarr;</span>
              </a>
            )}
          </span>
        </nav>
      </section>
    </article>
  );
}
